version: '3.7'

services:
  backend:
    build:
      context: bike_sharing
    environment:
      - MYSQL_HOST=db
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/bikeservice
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=verysecret
      - AUTH_SERVICE_URL=http://authenticator:8080
      - LOCATION_SERVICE_URL=http://location:8080
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENTID=286479622083-89aferh4mb7o51r4sbtsbcekf18177c6.apps.googleusercontent.com
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENTSECRET=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
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE=email,profile
    networks:
      - react-spring
      - spring-mysql
      - auth-network
    depends_on:
      - db
      - authenticator
    ports:
      - '8081:8080'
    restart: always

  authenticator:
    build:
      context: bike_sharing_auth
    networks:
      - auth-network
    ports:
      - '8083:8080'
    restart: always

  location:
    build:
        context: bike_sharing_location
    environment:
      - MYSQL_HOST=db
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/bikeservice
      - SPRING_DATASOURCE_USERNAME=root
      - AUTH_SERVICE_URL=http://authenticator:8080
      - SPRING_DATASOURCE_PASSWORD=verysecret
    networks:
      - auth-network
      - spring-mysql
      - react-spring
    depends_on:
      - db
      - authenticator
    ports:
      - '8084:8080'
    restart: always

  db:
    image: 'mysql:latest'
    environment:
      - 'MYSQL_DATABASE=bikeservice'
      - 'MYSQL_PASSWORD=secret'
      - 'MYSQL_ROOT_PASSWORD=verysecret'
      - 'MYSQL_USER=myuser'
    restart: always
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - spring-mysql
    ports:
      - '3307:3306'
#  frontend:
#    build:
#      context: 'bike_sharing_ui'
#      args:
#        REACT_APP_API_BASE_URL:  http://127.0.0.1:8080/
#
#    ports:
#      - '3000:80'
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    networks:
#      - react-spring
#    depends_on:
#      - backend
#    restart: always

volumes:
  db-data: {}
  db2-data: {}

networks:
  react-spring: {}
  spring-mysql: {}
  auth-network: {}
