#!/bin/bash
#
# init.d for calculator service
#

SERVICE_NAME={{ calculator_service_name }}

SERVICE_DIR={{ calculator_base_dir }}
PID_FILE={{ calculator_pid_file }}

cd $SERVICE_DIR

SERVICE_USER={{ calculator_user }}

LOG_FILE={{ calculator_log_dir }}/service.out

killtree() {
    local _pid=$1
    local _sig=${2:-15}
    for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
        killtree ${_child} ${_sig}
    done
    kill -${_sig} ${_pid}
}


case $1 in
 start)
  echo "Starting $SERVICE_NAME ..."
  if [ -f $PID_FILE ]; then
      PID=$(cat $PID_FILE);
      killtree $PID
      sleep '2';
  fi
  cd $SERVICE_DIR
  su $SERVICE_USER -c "nohup ./{{ calculator_binary_filename }} >>$LOG_FILE" &
  echo $! > $PID_FILE

  echo "$SERVICE_NAME started ..."
  ;;
 stop)
  if [ -f $PID_FILE ]; then
   echo "Stopping $SERVICE_NAME ..."
   PID=$(cat $PID_FILE);
   killtree $PID
   echo "$SERVICE_NAME stopped ..."
   sleep '2';
   /usr/bin/kill -s 0 `cat $PID_FILE` || rm $PID_FILE
  else
   echo "$SERVICE_NAME is not running ..."
  fi
  ;;
 status)
  if [ -f $PID_FILE ]; then
   /usr/bin/kill -s 0 `cat $PID_FILE`
   rc=$?
   if [[ $rc == 0 ]]; then
    PID=`cat $PID_FILE`
    echo "{{ calculator_service_name }} running with pid $PID"
    exit 0
   else
    echo "{{ calculator_service_name }} not running"
    exit 1
   fi
  else
   echo "pid file not found"
   exit 1
  fi
  ;;       
 *)
  echo "Usage: {{ calculator_base_dir }}/{{ calculator_service_name }}.sh \{start|stop|status}"
  exit 1
  ;;
esac